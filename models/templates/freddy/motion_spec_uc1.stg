import "kdl.stg"
import "robots.stg"
import "../common/includes.stg"
import "../common/controllers.stg"
import "../common/data_types.stg"
import "../common/embed_maps.stg"
import "../common/solvers.stg"
import "../common/control_loop_freq.stg"

application(variables, d) ::= <<
<kelo_motion_control_include()>
<cpp_include()>
<controller_include()>
<motion_spec_utils_include()>
<robot_mediators_include()>

int main()
{
  <! init robot data structure !>
  <init_robots(d.robots)>

  <! kdl init !>
  <kdl_init()>

  // initialize variables
  <! variables !>
  <variables: {v | <variables_init(v, variables.(v))> }; separator="\n">

  int count = 0;
  <initialize_control_loop_freq()>

  while (true) {
    <control_loop_freq_starter()>

    count++;
    std::cout \<\< "count: " \<\< count \<\< std::endl;

    <! update robot state !>
    get_robot_data(&robot);

    // controllers
    <! controllers !>
    <d.controllers: {v | <({<d.controllers.(v).name>})(v, d.controllers.(v))>}; separator="\n">

    
  }

  free_robot_data(&robot);

  return 0;
}
>>